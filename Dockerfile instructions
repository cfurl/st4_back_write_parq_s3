simple build 

 docker image build --tag st4_back_write_parq_s3 .  (note the dot indicates to build Dockerfile in current folder)
 
 After building the image i went straight to docker compose bc I didn't want to mess with complicated volume assignments with docker container run....
 #
 services:
  
  scraper:
    image: cfurl/st4_back_scrape24:v1
    container_name: scrape24
    networks:
      - some_name
    volumes:
      - st4_data:/home/data

  wgrib2:
    image: sondngyn/wgrib2:latest
    container_name: wgrib2
    command: "wgrib2_commands.sh"
    depends_on:
      scraper:
        condition: service_completed_successfully
    volumes: 
      - st4_data:/srv/
      - st4_data:/opt/    
      
  parqs3:
    image: st4_back_write_parq_s3:latest
    container_name: parqs3
    depends_on:
      wgrib2:
        condition: service_completed_successfully
    networks:
      - some_name
    volumes:
      - st4_data:/home/data

networks:
  some_name:
    external:
        name: st4_net
        
volumes:
  st4_data:
#


Put in on the registry
#
docker login --username cfurl
docker image tag st4_back_write_parq_s3 cfurl/st4_back_write_parq_s3:v1
docker image push cfurl/st4_back_write_parq_s3:v1

Now pull everything off of docker.io hub
#
 services:
  
  scraper:
    image: cfurl/st4_back_scrape24:v1
    container_name: scrape24
    networks:
      - some_name
    volumes:
      - st4_data:/home/data

  wgrib2:
    image: sondngyn/wgrib2:latest
    container_name: wgrib2
    command: "wgrib2_commands.sh"
    depends_on:
      scraper:
        condition: service_completed_successfully
    volumes: 
      - st4_data:/srv/
      - st4_data:/opt/    
      
  parqs3:
    image: cfurl/st4_back_write_parq_s3:v1
    container_name: parqs3
    depends_on:
      wgrib2:
        condition: service_completed_successfully
    networks:
      - some_name
    volumes:
      - st4_data:/home/data

networks:
  some_name:
    external:
        name: st4_net
        
volumes:
  st4_data:
#